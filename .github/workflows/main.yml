name: CI

on: 
  push:
    branches: master
  pull_request:
    branches: master
  schedule:
    - cron: 0 0 * * *  # run every day at UTC 00:00

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        verify_flag: ["", "--vac", "--cex"]
       
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Get type
        id: type
        run: echo ::set-output name=type::$(echo ${{ matrix.verify_flag }} | awk '{ print substr($1,3,5) "" substr($2,22) }')

      - name: Get exclude test
        id: exclude_files
        run: (test -f ".github/workflows/blacklist.${{steps.type.outputs.type}}.txt" && echo ::set-output name=exclude_files::"($(cut -f 1 ".github/workflows/blacklist.${{steps.type.outputs.type}}.txt" | head -c -1 | tr '\n' '|'))" ) || (echo ::set-output name=exclude_files::" ")

      - name: Get exclude test (for handle-type-is-ptr)
        id: exclude_files_ptr
        run: (test -f ".github/workflows/blacklist.ptr.${{steps.type.outputs.type}}.txt" && echo ::set-output name=exclude_files::"($(cut -f 1 ".github/workflows/blacklist.ptr.${{steps.type.outputs.type}}.txt" | head -c -1 | tr '\n' '|'))" ) || (echo ::set-output name=exclude_files::" ")

      - name: Docker
        run: docker build -t verify-trusty . --file docker/seahorn-dev14-verify-trusty.Dockerfile

      - name: Get number of Cores
        id: cores
        run: echo "::set-output name=num_cores::$(nproc --all)"

      - name: Run Tests
        run: docker run -t verify-trusty /bin/bash -c "cd build && mkdir -p /tmp/verifyTrusty && env VERIFY_FLAGS=\"${{ matrix.verify_flag }}\" ctest -j ${{steps.cores.outputs.num_cores}} --output-on-failure --timeout 2000 -E \"${{ steps.exclude_files.outputs.exclude_files }}\""

      - name: Run handle-type-is-ptr Tests
        run: docker run -t verify-trusty /bin/bash -c "cd build_ptr && mkdir -p /tmp/verifyTrusty && env VERIFY_FLAGS=\"${{ matrix.verify_flag }}\" ctest -j ${{steps.cores.outputs.num_cores}} --output-on-failure --timeout 2000 -E \"${{ steps.exclude_files_ptr.outputs.exclude_files }}\""
